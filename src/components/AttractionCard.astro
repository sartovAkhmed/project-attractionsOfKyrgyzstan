---
interface Props {
  attraction: {
    id: string;
    name: string;
    region: string;
    description: string;
    image: string;
    highlights: string[];
  }
}

const { attraction } = Astro.props;
---

<div class="attraction-card">
  <div class="card-image">
    <img src={attraction.image} alt={attraction.name} loading="lazy" />
    <div class="card-overlay">
      <span class="region-badge">{attraction.region}</span>
    </div>
  </div>
  <div class="card-content">
    <h3 class="card-title">{attraction.name}</h3>
    <p class="card-description">{attraction.description}</p>
    <div class="card-highlights">
      {attraction.highlights.slice(0, 2).map(highlight => (
        <span class="highlight-tag">{highlight}</span>
      ))}
    </div>
    <a href={`/attractions/${attraction.id}`} class="card-link">
      Подробнее
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <path d="M5 12h14M12 5l7 7-7 7"/>
      </svg>
    </a>
  </div>
</div>

<style>
  .attraction-card {
    background: white;
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    transition: all 0.4s ease;
    border: 1px solid rgba(37, 99, 235, 0.05);
  }

  .attraction-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
  }

  .card-image {
    position: relative;
    height: 240px;
    overflow: hidden;
  }

  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.4s ease;
  }

  .attraction-card:hover .card-image img {
    transform: scale(1.05);
  }

  .card-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0.1) 50%,
      rgba(0, 0, 0, 0.3) 100%
    );
    display: flex;
    align-items: flex-start;
    justify-content: flex-end;
    padding: 1rem;
  }

  .region-badge {
    background: rgba(255, 255, 255, 0.95);
    color: #2563EB;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 600;
    backdrop-filter: blur(10px);
  }

  .card-content {
    padding: 1.5rem;
  }

  .card-title {
    font-size: 1.375rem;
    font-weight: 700;
    color: #111827;
    margin: 0 0 0.75rem 0;
    line-height: 1.3;
  }

  .card-description {
    color: #6B7280;
    line-height: 1.6;
    margin: 0 0 1rem 0;
    font-size: 0.95rem;
  }

  .card-highlights {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-bottom: 1.5rem;
  }

  .highlight-tag {
    background: linear-gradient(135deg, #EBF4FF 0%, #E0F2FE 100%);
    color: #1E40AF;
    padding: 0.375rem 0.75rem;
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 500;
    border: 1px solid rgba(30, 64, 175, 0.1);
  }

  .card-link {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    color: #2563EB;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.95rem;
    transition: all 0.3s ease;
    padding: 0.75rem 1.25rem;
    background: linear-gradient(135deg, #EBF4FF 0%, #E0F2FE 100%);
    border-radius: 12px;
    border: 1px solid rgba(37, 99, 235, 0.1);
  }

  .card-link:hover {
    background: linear-gradient(135deg, #2563EB 0%, #10B981 100%);
    color: white;
    transform: translateX(4px);
  }

  .card-link svg {
    transition: transform 0.3s ease;
  }

  .card-link:hover svg {
    transform: translateX(2px);
  }

  @media (max-width: 768px) {
    .attraction-card {
      margin-bottom: 1.5rem;
    }

    .card-image {
      height: 200px;
    }

    .card-content {
      padding: 1.25rem;
    }

    .card-title {
      font-size: 1.25rem;
    }
  }
</style>